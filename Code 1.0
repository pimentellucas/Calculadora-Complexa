#include <stdio.h>
#include <stdlib.h>
#include <math.h>

int main(){

char soma[150];
int n,sinala,sinalb,sinalc,sinald,tiponum1,tiponum2,operacao;
double a,b,c,d,ai,bi,ci,di,ap,bp,resr,resi,pi;

n = 0;
sinala = 0;
sinalb = 0;
sinalc = 0;
sinald = 0;
tiponum1 = 0;
tiponum2 = 0;
operacao = 5;
a = 0;
b = 0;
c = 0;
d = 0;
ai = 0;
bi = 0;
ci = 0;
di = 0;
ap = 0;
bp = 0;
resr = 0;
resi = 0;
pi = 3.14159265358979323846;

// LEITURA DA SENTENçA

printf("Essa calculadora opera com numeros complexos da forma a+bi (retangular)\ne da forma c+dp (polar), sendo c o vetor e d o angulo\n");
printf("Pode se entrar quaisquer combinacoes dessas duas formas e os operadores:\n\nAdicao +\nSubtracao -\nDivisao /\nMultiplicacao *\nPotencia Inteira ^\npara conversao entre as formas, entre apenas com o numero, sem operador\n\n");
printf("Entre com todos os valores, mesmo que iguais a 0, com i na forma retangualar\ne como p na forma polar\n\n");
printf("Entre com a sentenca:\n");
scanf("%[^\n]c\n", soma);

while(soma[n] != '+' && soma[n] != '-' && soma[n] != '*' && soma[n] != '/' && soma[n] != '^' &&  soma[n] != '0' && soma[n] != '1' && soma[n] != '2' && soma[n] != '3' && soma[n] != '4' && soma[n] != '5' && soma[n] != '6' && soma[n] != '7' && soma[n] != '8' && soma[n] != '9' && soma[n] != 'i' && soma[n] != 'p'){
    n = n+1;
}

if (soma[n] == '-'){
    sinala = 1;
    n = n+1;
}
while(soma[n] != '+' && soma[n] != '-' && soma[n] != '*' && soma[n] != '/' && soma[n] != '^' &&  soma[n] != '0' && soma[n] != '1' && soma[n] != '2' && soma[n] != '3' && soma[n] != '4' && soma[n] != '5' && soma[n] != '6' && soma[n] != '7' && soma[n] != '8' && soma[n] != '9' && soma[n] != 'i' && soma[n] != 'p'){
    n = n+1;
}

if (soma[n] == '+'){
n = n+1;
}

while(soma[n] != '+' && soma[n] != '-' && soma[n] != '*' && soma[n] != '/' && soma[n] != '^' &&  soma[n] != '0' && soma[n] != '1' && soma[n] != '2' && soma[n] != '3' && soma[n] != '4' && soma[n] != '5' && soma[n] != '6' && soma[n] != '7' && soma[n] != '8' && soma[n] != '9' && soma[n] != 'i' && soma[n] != 'p'){
    n = n+1;
}

while(soma[n] != '-' && soma[n] != '+'){
    a = (a * 10) + (soma[n] - 48);
    n = n + 1;
    while(soma[n] != '+' && soma[n] != '-' && soma[n] != '*' && soma[n] != '/' && soma[n] != '^' &&  soma[n] != '0' && soma[n] != '1' && soma[n] != '2' && soma[n] != '3' && soma[n] != '4' && soma[n] != '5' && soma[n] != '6' && soma[n] != '7' && soma[n] != '8' && soma[n] != '9' && soma[n] != 'i' && soma[n] != 'p'){
        n = n+1;
    }
}

if (soma[n] == '-'){
    sinalb = 1;
}
n = n+1;

while(soma[n] != '+' && soma[n] != '-' && soma[n] != '*' && soma[n] != '/' && soma[n] != '^' &&  soma[n] != '0' && soma[n] != '1' && soma[n] != '2' && soma[n] != '3' && soma[n] != '4' && soma[n] != '5' && soma[n] != '6' && soma[n] != '7' && soma[n] != '8' && soma[n] != '9' && soma[n] != 'i' && soma[n] != 'p'){
    n = n+1;
}
while (soma[n] != 'i'  && soma[n] != 'p' && soma[n] != '\0'){
    b = (b * 10) + (soma[n] - 48);
    n = n + 1;
    while(soma[n] != '+' && soma[n] != '-' && soma[n] != '*' && soma[n] != '/' && soma[n] != '^' &&  soma[n] != '0' && soma[n] != '1' && soma[n] != '2' && soma[n] != '3' && soma[n] != '4' && soma[n] != '5' && soma[n] != '6' && soma[n] != '7' && soma[n] != '8' && soma[n] != '9' && soma[n] != 'i' && soma[n] != 'p'){
        n = n+1;
    }
}

if(soma[n] == 'p'){
    tiponum1 = 1;
}
n = n+1;
while(soma[n] != '+' && soma[n] != '-' && soma[n] != '*' && soma[n] != '/' && soma[n] != '^' &&  soma[n] != '0' && soma[n] != '1' && soma[n] != '2' && soma[n] != '3' && soma[n] != '4' && soma[n] != '5' && soma[n] != '6' && soma[n] != '7' && soma[n] != '8' && soma[n] != '9' && soma[n] != 'i' && soma[n] != 'p'){
    n = n+1;
}

if(soma[n] == '+'){                             //Soma
  operacao = 0;}
    else
        if(soma[n] == '-'){                     //Subtração
    operacao = 1;}
        else
            if(soma[n] == '*'){                 //multiplicação
        operacao = 2;}
            else
                if(soma[n] == '/'){             //Divisão
            operacao = 3;}
                else
                    if(soma[n] == '^'){         // Potencia
                operacao = 4;}
                        else
                        operacao = 5;           // Converter Polar retangular
n = n+1;
while(soma[n] != '+' && soma[n] != '-' && soma[n] != '*' && soma[n] != '/' && soma[n] != '^' &&  soma[n] != '0' && soma[n] != '1' && soma[n] != '2' && soma[n] != '3' && soma[n] != '4' && soma[n] != '5' && soma[n] != '6' && soma[n] != '7' && soma[n] != '8' && soma[n] != '9' && soma[n] != 'i' && soma[n] != 'p'){
    n = n+1;
}

if (soma[n] == 45){
    sinalc = 1;
    n = n+1;
}
while(soma[n] != '+' && soma[n] != '-' && soma[n] != '*' && soma[n] != '/' && soma[n] != '^' &&  soma[n] != '0' && soma[n] != '1' && soma[n] != '2' && soma[n] != '3' && soma[n] != '4' && soma[n] != '5' && soma[n] != '6' && soma[n] != '7' && soma[n] != '8' && soma[n] != '9' && soma[n] != 'i' && soma[n] != 'p'){
    n = n+1;
}
if (soma[n] == 43){
    sinalc = 0;
    n = n+1;
}
while(soma[n] != '+' && soma[n] != '-' && soma[n] != '*' && soma[n] != '/' && soma[n] != '^' &&  soma[n] != '0' && soma[n] != '1' && soma[n] != '2' && soma[n] != '3' && soma[n] != '4' && soma[n] != '5' && soma[n] != '6' && soma[n] != '7' && soma[n] != '8' && soma[n] != '9' && soma[n] != 'i' && soma[n] != 'p'){
    n = n+1;
}
if(operacao == '0' || operacao == '1' || operacao == '2' || operacao == '3'){
    while (soma[n] != '+' && soma[n] != '-'){
        c = (c * 10) + (soma[n] - 48);
        n = n + 1;
        while(soma[n] != '+' && soma[n] != '-' && soma[n] != '*' && soma[n] != '/' && soma[n] != '^' &&  soma[n] != '0' && soma[n] != '1' && soma[n] != '2' && soma[n] != '3' && soma[n] != '4' && soma[n] != '5' && soma[n] != '6' && soma[n] != '7' && soma[n] != '8' && soma[n] != '9' && soma[n] != 'i' && soma[n] != 'p'){
            n = n+1;
        }
    }
}
else
     while (soma[n] >= '0' && soma[n] <= '9'){
        c = (c * 10) + (soma[n] - 48);
        n = n + 1;
        while(soma[n] != '+' && soma[n] != '-' && soma[n] != '*' && soma[n] != '/' && soma[n] != '^' &&  soma[n] != '0' && soma[n] != '1' && soma[n] != '2' && soma[n] != '3' && soma[n] != '4' && soma[n] != '5' && soma[n] != '6' && soma[n] != '7' && soma[n] != '8' && soma[n] != '9' && soma[n] != 'i' && soma[n] != 'p'){
            n = n+1;
        }
    }

if (soma[n] == '-'){
    sinald = 1;
}
n = n+1;
while(soma[n] != '+' && soma[n] != '-' && soma[n] != '*' && soma[n] != '/' && soma[n] != '^' &&  soma[n] != '0' && soma[n] != '1' && soma[n] != '2' && soma[n] != '3' && soma[n] != '4' && soma[n] != '5' && soma[n] != '6' && soma[n] != '7' && soma[n] != '8' && soma[n] != '9' && soma[n] != 'i' && soma[n] != 'p'){
    n = n+1;
}
while (soma[n] != 'i'  && soma[n] != 'p'){
    d = (d * 10) + (soma[n] - 48);
    n = n + 1;
    while(soma[n] != '+' && soma[n] != '-' && soma[n] != '*' && soma[n] != '/' && soma[n] != '^' &&  soma[n] != '0' && soma[n] != '1' && soma[n] != '2' && soma[n] != '3' && soma[n] != '4' && soma[n] != '5' && soma[n] != '6' && soma[n] != '7' && soma[n] != '8' && soma[n] != '9' && soma[n] != 'i' && soma[n] != 'p'){
        n = n+1;
    }
}
if(soma[n] == 'p'){
    tiponum2 = 1;
}

//NUMEROS NEGATIVOS

if(sinala == 1){
    a = a * (-1);
}
if(sinalb == 1){
    b = b * (-1);
}
if(sinalc == 1){
    c = c * (-1);
}
if(sinald == 1){
    d = d * (-1);
}

//CONVERSãO RETANGULAR/POLAR

    if (tiponum1 == 1){
    ap = a;
    bp = b;
    ai = cos(b * pi/180) * a;
    bi = sin(b * pi/180) * a;
}
if(tiponum2 == 1){
    ci = cos(d * pi/180) * c;
    di = sin(d * pi/180) * c;
}
if(tiponum1 == 0){
    ap = sqrt((a*a)+(b*b));
    bp = (atan(b/a)* (180/pi));
    ai = a;
    bi = b;
}
if(tiponum2 == 0){
    ci = c;
    di = d;
}

//OPERAÇÕES

//soma
if (operacao == 0){
        resr = ai + ci;
        resi = bi + di;
}
//subtraÇÂo
if (operacao == 1){
        resr = ai - ci;
        resi = bi - di;
}
//multiplicaÇÃo
if (operacao == 2){
        resr = (ai*ci) - (bi*di);
        resi = (ai*di) + (bi*ci);
}
//divisÃo
if (operacao == 3){
    resr = ((ai*ci)+(bi*di))/((ci*ci)+(di*di));
    resi = ((bi*ci)-(ai*di))/((ci*ci)+(di*di));
    while(soma[n] != '+' && soma[n] != '-' && soma[n] != '*' && soma[n] != '/' && soma[n] != '^' &&  soma[n] != '0' && soma[n] != '1' && soma[n] != '2' && soma[n] != '3' && soma[n] != '4' && soma[n] != '5' && soma[n] != '6' && soma[n] != '7' && soma[n] != '8' && soma[n] != '9' && soma[n] != 'i' && soma[n] != 'p'){
        n = n+1;
    }
}
//potenciaÇÃo
if (operacao == 4){
        resr = ai;
        resi = bi;
    while(c > 1){
        a = resr;
        b = resi;
        resr = (a*ai) - (b*bi);
        resi = (a*bi) + (b*ai);
        c = c - 1;
    }
}
//conversÃo
if(operacao == 5){
    if(tiponum1 == 0){
        resr = ap;
        resi = bp;
        printf("o numero na forma polar e:\n%.2lf + %.2lfp\n", resr, resi);
    }
    if(tiponum1 == 1){
        resr = ai;
        resi = bi;
        printf("o numero na forma retangular e:\n%.2lf + %.2lfi\n", resr, resi);
    }
}
//resultado
if(operacao == 0 || operacao == 1 || operacao == 2 || operacao == 3 ||operacao == 4){
    printf("o resultado e:\n%.2lf + %.2lfi\n", resr, resi);
}
return 0;
}
